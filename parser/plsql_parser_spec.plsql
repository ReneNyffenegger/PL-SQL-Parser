create or replace package plsql_parser as

     procedure  init_lvl;

     function   get_id                          (tg in out token_getter, error_msg in varchar2 := null) return varchar2;

     function  "analytic_clause"                (tg in out token_getter) return number;
     function  "complex_plsql_ident"            (tg in out token_getter, star_ in boolean) return number;
     function  "complex_plsql_ident_elem"       (tg in out token_getter, complex_plsql_ident in number, first in boolean, star_ in boolean) return boolean;
     function  "datatype"                       (tg in out token_getter, with_precision in boolean) return number;
     function  "declare_section"                (tg in out token_getter, autonomous_transaction_allowed in boolean) return number;
     function  "dml_table_expression_clause"    (tg in out token_getter) return number;
     function  "else_clause"                    (tg in out token_getter) return number; 
     function  "elsif_list"                     (tg in out token_getter) return number;
     function  "error_logging_clause"           (tg in out token_getter) return number;
     function  "exception_handler_list"         (tg in out token_getter) return number;
     function  "expression"                     (tg in out token_getter, check_outer_join_symbol in boolean, star_ in boolean, aggregate_function in boolean, prior_ in boolean) return number;
     function  "expression_list"                (tg in out token_getter) return number;
     function  "expression_list_elem"           (tg in out token_getter, expression_list in number) return boolean;
     function  "for_update_clause"              (tg in out token_getter) return number;
     function  "function_expression"            (tg in out token_getter, check_outer_join_symbol in boolean) return number;
     function  "function_heading"               (tg in out token_getter) return number;
     function  "group_by_elem"                  (tg in out token_getter, group_by_clause in number) return boolean;
     function  "hint"                           (tg in out token_getter) return varchar2;
     function  "inner_join_clause"              (tg in out token_getter) return number;
     function  "insert_statement"               (tg in out token_getter) return number;
     function  "into_clause"                    (tg in out token_getter) return number;
     function  "item_list_1"                    (tg in out token_getter, autonomous_transaction_allowed in boolean) return number;
     function  "item_list_2"                    (tg in out token_getter) return number;
     function  "join_clause"                    (tg in out token_getter) return number;
     function  "join_clause_elem"               (tg in out token_getter, join_clause in number) return boolean;
     function  "join_on_using"                  (tg in out token_getter) return number;
     function  "logical_term_list"              (tg in out token_getter, check_outer_join_symbol in boolean, prior_ in boolean, boolean_factor in boolean, aggregate_function in boolean) return number;
     function  "nested_table_type_def"          (tg in out token_getter) return number;
     function  "null_condition"                 (tg in out token_getter) return number;
     function  "order_by_clause"                (tg in out token_getter) return number;
     function  "order_by_elem"                  (tg in out token_getter, order_by_clause in number) return boolean;
     function  "outer_join_clause"              (tg in out token_getter) return number;
     procedure "package"                        (tg in out token_getter);
     procedure "package_body"                   (tg in out token_getter);
     function  "parameter_declaration_list"     (tg in out token_getter, out_parameters_allowed in boolean) return number;
     function  "parameter_list"                 (tg in out token_getter, check_outer_join_symbol in boolean) return number;
     function  "plsql_identifier"               (tg in out token_getter, check_outer_join_symbol in boolean, star_ in boolean) return number;
     function  "plsql_identifier_list"          (tg in out token_getter) return number;
     function  "pragma_"                        (tg in out token_getter, autonomous_transaction_allowed in boolean) return number;
     function  "procedure_declaration"          (tg in out token_getter) return number;
     function  "procedure_heading"              (tg in out token_getter) return number;
     function  "procedure_definition"           (tg in out token_getter) return number;
     function  "query_partition_clause"         (tg in out token_getter) return number;
     function  "relation"                       (tg in out token_getter, check_outer_join_symbol in boolean, prior_ in boolean, aggregate_function in boolean) return number;
     function  "restrict_references_pragma"     (tg in out token_getter) return number;
     function  "returning_clause"               (tg in out token_getter) return number;
     function  "scalar_datatype"                (tg in out token_getter, with_precision in boolean) return number;
     function  "scalar_subquery_expression"     (tg in out token_getter) return number;
     function  "searched_case_elem"             (tg in out token_getter, searched_case_expression in number) return boolean;
     function  "searched_case_expression"       (tg in out token_getter) return number;
     function  "searched_case_statement"        (tg in out token_getter) return number;
     function  "select_list"                    (tg in out token_getter) return number;
     function  "select_statement"               (tg in out token_getter, plsql in boolean) return number;
     function  "simple_case_elem"               (tg in out token_getter, simple_case_expression in number) return boolean;
     function  "simple_case_expression"         (tg in out token_getter) return number;
     function  "simple_case_statement"          (tg in out token_getter) return number;
     function  "single_table_insert"            (tg in out token_getter) return number;
     function  "start_with_condition"           (tg in out token_getter) return number;
     function  "statement_list"                 (tg in out token_getter) return number;
     function  "subquery"                       (tg in out token_getter, into_clause in boolean) return number;
     function  "subquery_elem"                  (tg in out token_getter, subquery in number, set_operator in varchar2, into_clause in boolean) return boolean;
     function  "subquery_factoring_clause"      (tg in out token_getter) return number;
     function  "subquery_factoring_elem"        (tg in out token_getter, subquery_factoring_clause in number) return boolean;
     function  "term"                           (tg in out token_getter, expression in number, addop in varchar2, check_outer_join_symbol in boolean, star_ in boolean, aggregate_function in boolean) return boolean;
     function  "table_collection_expression"    (tg in out token_getter) return number;
     function  "table_reference"                (tg in out token_getter) return number;
     function  "type_definition"                (tg in out token_getter) return number;
     function  "update_set_clause_elem"         (tg in out token_getter, update_set_clause in number) return boolean;
     function  "update_statement"               (tg in out token_getter) return number;
     function  "using_clause"                   (tg in out token_getter) return number;
     function  "values_clause"                  (tg in out token_getter) return number;
     function  "variable_declaration"           (tg in out token_getter) return number;
     function  "while_loop_statement"           (tg in out token_getter) return number;
     function  "where_clause"                   (tg in out token_getter) return number;
     function  "windowing_clause"               (tg in out token_getter) return number;

end plsql_parser;
/
